/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ds.view;

import ds.controll.Controller;
import ds.observer.DefenceObserver;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class HelicopterForm extends javax.swing.JFrame implements Controller {

    private DefenceObserver observer;
    private int energy = 100;
    private int solders = 200;
    private int ammo = 1500;

    /**
     * Creates new form HelicopterForm
     */
    public HelicopterForm(DefenceObserver observer) {
        this.observer = observer;
        initComponents();
        setVisible(true);
        btnLaser.setEnabled(false);
        btnMissile.setEnabled(false);
        btnShoot.setEnabled(false);
        solderSpinner.setValue(solders);
        ammoSpinner.setValue(ammo);
        energy();
        killSolders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        solderSpinner = new javax.swing.JSpinner();
        ammoSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        energyText = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        btnShoot = new javax.swing.JButton();
        btnMissile = new javax.swing.JButton();
        btnLaser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaHelicopter = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sliderEnergy = new javax.swing.JSlider();
        checkPosition = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("A78 Eagle");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        solderSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                solderSpinnerStateChanged(evt);
            }
        });
        getContentPane().add(solderSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 201, 97, -1));

        ammoSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ammoSpinnerStateChanged(evt);
            }
        });
        getContentPane().add(ammoSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 226, 97, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Soldiers");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 201, 48, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ammo");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 229, 48, -1));

        energyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        energyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                energyTextActionPerformed(evt);
            }
        });
        getContentPane().add(energyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 85, 73, 29));

        lblArea.setFont(new java.awt.Font("Nirmala UI", 1, 20)); // NOI18N
        lblArea.setForeground(new java.awt.Color(255, 51, 51));
        lblArea.setText("Area is Not Cleared");
        getContentPane().add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 57, 232, 31));

        btnShoot.setBackground(new java.awt.Color(153, 153, 255));
        btnShoot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnShoot.setText("Shoot");
        btnShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShootActionPerformed(evt);
            }
        });
        getContentPane().add(btnShoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 106, 130, -1));

        btnMissile.setBackground(new java.awt.Color(255, 153, 153));
        btnMissile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMissile.setText("Missile Opration");
        btnMissile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissileActionPerformed(evt);
            }
        });
        getContentPane().add(btnMissile, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 106, -1, -1));

        btnLaser.setBackground(new java.awt.Color(255, 255, 153));
        btnLaser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLaser.setText("Laser Opration");
        btnLaser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaserActionPerformed(evt);
            }
        });
        getContentPane().add(btnLaser, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 144, -1, -1));

        txtAreaHelicopter.setBackground(new java.awt.Color(0, 0, 0));
        txtAreaHelicopter.setColumns(20);
        txtAreaHelicopter.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        txtAreaHelicopter.setForeground(new java.awt.Color(51, 153, 0));
        txtAreaHelicopter.setRows(5);
        jScrollPane1.setViewportView(txtAreaHelicopter);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 201, 301, 122));

        btnSend.setBackground(new java.awt.Color(0, 204, 0));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 341, 81, 30));

        txtMessage.setBackground(new java.awt.Color(51, 51, 51));
        txtMessage.setForeground(new java.awt.Color(51, 204, 0));
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        getContentPane().add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 342, 202, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Helicopter");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 634, 51));

        sliderEnergy.setForeground(new java.awt.Color(204, 204, 204));
        sliderEnergy.setMajorTickSpacing(10);
        sliderEnergy.setMinorTickSpacing(2);
        sliderEnergy.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderEnergy.setPaintLabels(true);
        sliderEnergy.setPaintTicks(true);
        getContentPane().add(sliderEnergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 120, 71, 280));

        checkPosition.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkPosition.setForeground(new java.awt.Color(255, 255, 255));
        checkPosition.setText("Position");
        checkPosition.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPositionActionPerformed(evt);
            }
        });
        getContentPane().add(checkPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 107, 157, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fuel");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 57, 73, 22));

        jLabel5.setIcon(new javax.swing.ImageIcon("D:\\Netbeans Projects\\Defense-System\\src\\images\\submarine.jpg")); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 650, 410));

        getAccessibleContext().setAccessibleDescription("private rocket");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShootActionPerformed
        observer.buttonMessage("Helicopter starts shoot !" + "\n");
        ammoSpinner.setValue(this.ammo--);
        try {
            File file = new File("clean-machine-gun-burst-98224.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }

    }//GEN-LAST:event_btnShootActionPerformed
    public void killSolders() {
        new Thread(() -> {
            while (true) {
                try {
                    solderSpinner.setValue(this.solders--);
                    Thread.sleep(4000);
                } catch (InterruptedException ex) {
                }
            }
        }).start();
    }

    public void energy() {
        new Thread(() -> {
            while (true) {
                sliderEnergy.setValue(this.energy--);
                energyText.setText(energy + "%");
                if (energy >= 51) {
                    energyText.setBackground(Color.YELLOW);
                }
                if (energy <= 50) {
                    energyText.setBackground(Color.orange);
                }
                if (energy <= 20) {
                    energyText.setBackground(Color.pink);
                }
                if (energy < 10) {
                    energyText.setBackground(Color.RED);
                }
                try {
                    Thread.sleep(2500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(HelicopterForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (energy == 0) {
                    int choice = JOptionPane.showConfirmDialog(null, "Submarine has out of Energy!\nDo you want to refill?", "Energy Low!!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (choice == JOptionPane.YES_OPTION) {
                        energy = 100;
                    } else {
                        JOptionPane.showMessageDialog(null, "Submarine is out of Area ☠", "over", JOptionPane.ERROR_MESSAGE);
                        dispose();
                    }
                }
            }
        }).start();

    }

    @Override
    public void message(String message) {
        txtAreaHelicopter.append(message + "\n");
    }

    @Override
    public void areaClear() {
        lblArea.setText("Area Cleared");
        lblArea.setForeground(Color.GREEN);
    }

    @Override
    public void areaNotClear() {
        lblArea.setText("Area Not Cleared");
        lblArea.setForeground(Color.RED);
    }

    @Override
    public void mainFormMessage(String message) {
    }

    @Override
    public void buttonMessage(String message) {
    }
    private void btnLaserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaserActionPerformed
        observer.buttonMessage("Helicopter starts Laser attack !" + "\n");
        try {
            File file = new File("plasma-gun-fire-162136.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnLaserActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (!"".equals(txtMessage.getText())) {
            observer.mainFormMessage("Helicopter : " + txtMessage.getText() + "\n");
            txtMessage.setText("");
        } else {
            JOptionPane.showConfirmDialog(null, "Enter your message first!", "Error", JOptionPane.OK_CANCEL_OPTION, 0);
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void checkPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkPositionActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        if (!"".equals(txtMessage.getText())) {
            observer.mainFormMessage("Helicopter : " + txtMessage.getText() + "\n");
            txtMessage.setText("");
        } else {
            JOptionPane.showConfirmDialog(null, "Enter your message first!", "Error", JOptionPane.OK_CANCEL_OPTION, 0);
        }
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnMissileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMissileActionPerformed
        observer.buttonMessage("Helicopter starts a Missile attack!" + "\n");
        ammoSpinner.setValue(this.ammo-10);
        
         try {
            File file = new File("big-spaceship-missile-1-356318.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnMissileActionPerformed

    private void energyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_energyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_energyTextActionPerformed

    private void solderSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_solderSpinnerStateChanged

    }//GEN-LAST:event_solderSpinnerStateChanged

    private void ammoSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ammoSpinnerStateChanged

    }//GEN-LAST:event_ammoSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ammoSpinner;
    private javax.swing.JButton btnLaser;
    private javax.swing.JButton btnMissile;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShoot;
    private javax.swing.JCheckBox checkPosition;
    private javax.swing.JTextField energyText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JSlider sliderEnergy;
    private javax.swing.JSpinner solderSpinner;
    private javax.swing.JTextArea txtAreaHelicopter;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setPosition(String message) {
        if (checkPosition.isSelected()) {
            txtAreaHelicopter.append(message);
        }
    }

    @Override
    public void setSliderControll(int value) {
        if (checkPosition.isSelected()) {
            if (value >= 0 && value <= 100) {
                if (value >= 20) {
                    btnShoot.setEnabled(true);
                } else {
                    btnShoot.setEnabled(false);
                }
                if (value >= 50) {
                    btnMissile.setEnabled(true);
                } else {
                    btnMissile.setEnabled(false);
                }
                if (value >= 80) {
                    btnLaser.setEnabled(true);
                } else {
                    btnLaser.setEnabled(false);
                }
            }
        }
    }

}
