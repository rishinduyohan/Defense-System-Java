/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ds.view;

import ds.controll.Controller;
import ds.observer.DefenceObserver;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class SubmarineForm extends javax.swing.JFrame implements Controller {

    private DefenceObserver observer;
    private int oxygen = 100;
    private int energy = 100;
     private int solders = 150;
    private int ammo = 8000;
    

    /**
     * Creates new form SubmarineForm
     */
    public SubmarineForm(DefenceObserver observer) {
        this.observer = observer;
        initComponents();
        setVisible(true);
        btnShoot.setEnabled(false);
        btnSonar.setEnabled(false);
        btnTMissile.setEnabled(false);
        btnTridentMissile.setEnabled(false);
        solderSpinner.setValue(solders);
        ammoSpinner.setValue(ammo);
        oxygen();
        energy();
        killSolders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        solderSpinner = new javax.swing.JSpinner();
        ammoSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        energyText = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        btnShoot = new javax.swing.JButton();
        btnSonar = new javax.swing.JButton();
        btnTMissile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSubmarine = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sliderEnergy = new javax.swing.JSlider();
        btnTridentMissile = new javax.swing.JButton();
        sliderOxygen = new javax.swing.JSlider();
        oxygenText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        checkPosition = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(solderSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 184, 97, -1));
        getContentPane().add(ammoSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 209, 97, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Soldiers");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 184, 48, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ammo");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 212, 48, -1));

        energyText.setBackground(new java.awt.Color(255, 255, 153));
        energyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(energyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 88, 73, 29));

        lblArea.setFont(new java.awt.Font("Nirmala UI", 1, 20)); // NOI18N
        lblArea.setForeground(new java.awt.Color(255, 51, 51));
        lblArea.setText("Area is Not Cleared");
        getContentPane().add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 232, 31));

        btnShoot.setBackground(new java.awt.Color(153, 153, 255));
        btnShoot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnShoot.setText("Shoot");
        btnShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShootActionPerformed(evt);
            }
        });
        getContentPane().add(btnShoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 88, 142, -1));

        btnSonar.setBackground(new java.awt.Color(255, 153, 255));
        btnSonar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSonar.setText("Sonar Opration");
        btnSonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSonarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSonar, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 88, 144, -1));

        btnTMissile.setBackground(new java.awt.Color(0, 255, 153));
        btnTMissile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTMissile.setText("Toahwak Missile");
        btnTMissile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTMissileActionPerformed(evt);
            }
        });
        getContentPane().add(btnTMissile, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 127, -1, -1));

        txtAreaSubmarine.setBackground(new java.awt.Color(0, 0, 0));
        txtAreaSubmarine.setColumns(20);
        txtAreaSubmarine.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        txtAreaSubmarine.setForeground(new java.awt.Color(51, 153, 0));
        txtAreaSubmarine.setRows(5);
        jScrollPane1.setViewportView(txtAreaSubmarine);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 184, 301, 122));

        btnSend.setBackground(new java.awt.Color(0, 204, 0));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 324, 81, 30));

        txtMessage.setBackground(new java.awt.Color(51, 51, 51));
        txtMessage.setForeground(new java.awt.Color(51, 204, 0));
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        getContentPane().add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 325, 202, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Submarine");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 698, 51));

        sliderEnergy.setForeground(new java.awt.Color(255, 255, 255));
        sliderEnergy.setMajorTickSpacing(10);
        sliderEnergy.setMinorTickSpacing(2);
        sliderEnergy.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderEnergy.setPaintLabels(true);
        sliderEnergy.setPaintTicks(true);
        getContentPane().add(sliderEnergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 123, 71, 264));

        btnTridentMissile.setBackground(new java.awt.Color(102, 0, 0));
        btnTridentMissile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTridentMissile.setForeground(new java.awt.Color(255, 255, 255));
        btnTridentMissile.setText("Trident-2 Missile");
        btnTridentMissile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTridentMissileActionPerformed(evt);
            }
        });
        getContentPane().add(btnTridentMissile, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 127, -1, -1));

        sliderOxygen.setBackground(new java.awt.Color(255, 255, 255));
        sliderOxygen.setForeground(new java.awt.Color(255, 255, 255));
        sliderOxygen.setMajorTickSpacing(10);
        sliderOxygen.setMinorTickSpacing(2);
        sliderOxygen.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderOxygen.setPaintLabels(true);
        sliderOxygen.setPaintTicks(true);
        getContentPane().add(sliderOxygen, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 125, 71, 262));

        oxygenText.setBackground(new java.awt.Color(153, 204, 255));
        oxygenText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(oxygenText, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 88, 73, 29));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Energy");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 57, 73, 25));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Oxygen");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 57, 73, 25));

        checkPosition.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        checkPosition.setForeground(new java.awt.Color(255, 255, 255));
        checkPosition.setText("Position");
        checkPosition.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPositionActionPerformed(evt);
            }
        });
        getContentPane().add(checkPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 91, 157, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Netbeans Projects\\Defense-System\\src\\images\\submarine-control-room-stockcake.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 710, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShootActionPerformed
        observer.buttonMessage("Submarine Starts shoot!" + "\n");
        ammoSpinner.setValue(this.ammo--);
        
        try {
            File file = new File("underwatershoot.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnShootActionPerformed

    private void btnTMissileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTMissileActionPerformed
        observer.buttonMessage("Submarine starts a Toahwak Missile attack!" + "\n");
        ammoSpinner.setValue(this.ammo-25);
        
        try {
            File file = new File("big-spaceship-missile-1-356318.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnTMissileActionPerformed
    public void killSolders() {
        new Thread(() -> {
            while (true) {
                try {
                    solderSpinner.setValue(this.solders--);
                    Thread.sleep(4000);
                } catch (InterruptedException ex) {
                }
            }
        }).start();
    }
    @Override
    public void message(String message) {
        txtAreaSubmarine.append(message + "\n");
    }

    @Override
    public void areaClear() {
        lblArea.setText("Area Cleared");
        lblArea.setForeground(Color.GREEN);
    }

    @Override
    public void areaNotClear() {
        lblArea.setText("Area Not Cleared");
        lblArea.setForeground(Color.RED);
    }
    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (!"".equals(txtMessage.getText())) {
            observer.mainFormMessage("Submarine : " + txtMessage.getText() + "\n");
            txtMessage.setText("");
        } else {
            JOptionPane.showConfirmDialog(null, "Enter your message first!", "Error", JOptionPane.OK_CANCEL_OPTION, 0);
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void checkPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkPositionActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        if (!"".equals(txtMessage.getText())) {
            observer.mainFormMessage("Submarine : " + txtMessage.getText() + "\n");
            txtMessage.setText("");
        } else {
            JOptionPane.showConfirmDialog(null, "Enter your message first!", "Error", JOptionPane.OK_CANCEL_OPTION, 0);
        }
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnTridentMissileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTridentMissileActionPerformed
        observer.buttonMessage("Submarine Start a Trident Missile attack!" + "\n");
        ammoSpinner.setValue(this.ammo-30);
        
         try {
            File file = new File("rocket-launch-306441.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnTridentMissileActionPerformed

    private void btnSonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSonarActionPerformed
        observer.buttonMessage("Submarine starts a Sonar attack!" + "\n");
        ammoSpinner.setValue(this.ammo-10);
        
         try {
            File file = new File("sonar-107581.wav");
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
        }
    }//GEN-LAST:event_btnSonarActionPerformed
    public void oxygen() {
        new Thread(() -> {
            while (true) {
                sliderOxygen.setValue(oxygen--);
                oxygenText.setText(oxygen + "%");
                if (oxygen >= 51) {
                    oxygenText.setBackground(Color.BLUE);
                }
                if (oxygen <= 50) {
                    oxygenText.setBackground(Color.orange);
                }
                if (oxygen <= 20) {
                    oxygenText.setBackground(Color.pink);
                }
                if (oxygen < 10) {
                    oxygenText.setBackground(Color.RED);
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(SubmarineForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (oxygen == 0) {
                    int desicion = JOptionPane.showConfirmDialog(null, "Submarine has out of oxygen!\nDo you want to refill?", "Oxygen Low!!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (desicion == JOptionPane.YES_OPTION) {
                        oxygen = 100;
                    } else {
                        JOptionPane.showMessageDialog(null, "Submarine is out of Area ☠️", "over", JOptionPane.ERROR_MESSAGE);
                        dispose();
                    }
                }
            }
        }).start();

    }

    public void energy() {
        new Thread(() -> {
            while (true) {
                sliderEnergy.setValue(energy--);
                energyText.setText(energy + "%");
                if (energy >= 51) {
                    energyText.setBackground(Color.YELLOW);
                }
                if (energy <= 50) {
                    energyText.setBackground(Color.orange);
                }
                if (energy <= 20) {
                    energyText.setBackground(Color.pink);
                }
                if (energy < 10) {
                    energyText.setBackground(Color.RED);
                }
                try {
                    Thread.sleep(2500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(SubmarineForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (energy == 0) {
                    int choice = JOptionPane.showConfirmDialog(null, "Submarine has out of Energy!\nDo you want to refill?", "Energy Low!!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (choice == JOptionPane.YES_OPTION) {
                        energy = 100;
                    } else {
                        JOptionPane.showMessageDialog(null, "Submarine is out of Area ☠", "over", JOptionPane.ERROR_MESSAGE);
                        dispose();
                    }
                }
            }
        }).start();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ammoSpinner;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShoot;
    private javax.swing.JButton btnSonar;
    private javax.swing.JButton btnTMissile;
    private javax.swing.JButton btnTridentMissile;
    private javax.swing.JCheckBox checkPosition;
    private javax.swing.JTextField energyText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JTextField oxygenText;
    private javax.swing.JSlider sliderEnergy;
    private javax.swing.JSlider sliderOxygen;
    private javax.swing.JSpinner solderSpinner;
    private javax.swing.JTextArea txtAreaSubmarine;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mainFormMessage(String message) {
    }

    @Override
    public void buttonMessage(String message) {
    }

    @Override
    public void setPosition(String message) {
        if (checkPosition.isSelected()) {
            txtAreaSubmarine.append(message);
        }
    }

    @Override
    public void setSliderControll(int value) {
        if (checkPosition.isSelected()) {
            if (value >= 0 && value <= 100) {
                if (value >= 20) {
                    btnShoot.setEnabled(true);
                } else {
                    btnShoot.setEnabled(false);
                }
                if (value >= 40) {
                    btnSonar.setEnabled(true);
                } else {
                    btnSonar.setEnabled(false);
                }
                if (value >= 70) {
                    btnTMissile.setEnabled(true);
                } else {
                    btnTMissile.setEnabled(false);
                }
                if (value >= 90) {
                    btnTridentMissile.setEnabled(true);
                } else {
                    btnTridentMissile.setEnabled(false);
                }
            }
        }
    }

}
